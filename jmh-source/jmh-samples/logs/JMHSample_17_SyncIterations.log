# JMH version: 1.22-SNAPSHOT
# VM version: JDK 1.8.0_112, Java HotSpot(TM) 64-Bit Server VM, 25.112-b15
# VM invoker: /home/hadoop/jdk1.8.0_112/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 640 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.openjdk.jmh.samples.JMHSample_17_SyncIterations.test

# Run progress: 0.00% complete, ETA 00:00:10
# Fork: 1 of 1
# Warmup Iteration   1: 1246.061 ops/ms
# Warmup Iteration   2: 1164.516 ops/ms
# Warmup Iteration   3: 1194.153 ops/ms
# Warmup Iteration   4: 1186.070 ops/ms
# Warmup Iteration   5: 1183.941 ops/ms
Iteration   1: 1181.296 ops/ms
Iteration   2: 1187.904 ops/ms
Iteration   3: 1190.664 ops/ms
Iteration   4: 1189.642 ops/ms
Iteration   5: 1187.031 ops/ms


Result "org.openjdk.jmh.samples.JMHSample_17_SyncIterations.test":
  1187.307 ±(99.9%) 14.055 ops/ms [Average]
  (min, avg, max) = (1181.296, 1187.307, 1190.664), stdev = 3.650
  CI (99.9%): [1173.253, 1201.362] (assumes normal distribution)


# Run complete. Total time: 00:00:23

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          Mode  Cnt     Score    Error   Units
JMHSample_17_SyncIterations.test  thrpt    5  1187.307 ± 14.055  ops/ms
